// Mocks generated by Mockito 5.4.6 from annotations
// in metronome/test/presentation/metronome_view_model_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:core/core.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMetronomeState_0 extends _i1.SmartFake
    implements _i2.MetronomeState {
  _FakeMetronomeState_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [IMetronomeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIMetronomeRepository extends _i1.Mock
    implements _i2.IMetronomeRepository {
  @override
  _i3.Future<void> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i2.MetronomeState playClick() =>
      (super.noSuchMethod(
            Invocation.method(#playClick, []),
            returnValue: _FakeMetronomeState_0(
              this,
              Invocation.method(#playClick, []),
            ),
            returnValueForMissingStub: _FakeMetronomeState_0(
              this,
              Invocation.method(#playClick, []),
            ),
          )
          as _i2.MetronomeState);

  @override
  _i2.MetronomeState stopClick() =>
      (super.noSuchMethod(
            Invocation.method(#stopClick, []),
            returnValue: _FakeMetronomeState_0(
              this,
              Invocation.method(#stopClick, []),
            ),
            returnValueForMissingStub: _FakeMetronomeState_0(
              this,
              Invocation.method(#stopClick, []),
            ),
          )
          as _i2.MetronomeState);

  @override
  _i2.MetronomeState changeBpm(int? newBpm) =>
      (super.noSuchMethod(
            Invocation.method(#changeBpm, [newBpm]),
            returnValue: _FakeMetronomeState_0(
              this,
              Invocation.method(#changeBpm, [newBpm]),
            ),
            returnValueForMissingStub: _FakeMetronomeState_0(
              this,
              Invocation.method(#changeBpm, [newBpm]),
            ),
          )
          as _i2.MetronomeState);

  @override
  _i3.Future<void> dispose() =>
      (super.noSuchMethod(
            Invocation.method(#dispose, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
