// Mocks generated by Mockito 5.4.6 from annotations
// in chord_progression/test/data/chord_generator_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:chord_progression/src/domain/entities/chord_type.dart' as _i5;
import 'package:chord_progression/src/domain/entities/note.dart' as _i3;
import 'package:chord_progression/src/domain/repositories/chord_root_repository.dart'
    as _i2;
import 'package:chord_progression/src/domain/repositories/chord_type_repository.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ChordRootRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockChordRootRepository extends _i1.Mock
    implements _i2.ChordRootRepository {
  MockChordRootRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Note generateRoot() =>
      (super.noSuchMethod(
            Invocation.method(#generateRoot, []),
            returnValue: _i3.Note.c,
          )
          as _i3.Note);
}

/// A class which mocks [ChordTypeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockChordTypeRepository extends _i1.Mock
    implements _i4.ChordTypeRepository {
  MockChordTypeRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.ChordType generateType() =>
      (super.noSuchMethod(
            Invocation.method(#generateType, []),
            returnValue: _i5.ChordType.major,
          )
          as _i5.ChordType);
}
